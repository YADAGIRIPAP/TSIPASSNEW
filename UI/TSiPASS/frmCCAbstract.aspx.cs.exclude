//By Srikanth on 13-05-2013
// For: Abstract for All Zone
// Tables Used: COMPLAINT_MASTER,COMPLAINT_TRANS,DEPT,SERVICE,LOCALITY,SERVICE_USERS,USERS
///Storedprocedure Name : Queries  used.

using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Data.SqlClient;


public partial class FrmUsers : System.Web.UI.Page
{
    HtmlTableRow tRow;
    HtmlTableCell tcell1;
    DataSet ds = new DataSet();

    int cnt = 0;    
    string Dept = "";
    DB.DB con1 = new DB.DB();
    CitizenCharter tran1 = new CitizenCharter();
    General csRegComplaint = new General();
    int pendingafter, pendingbefore, closedafter, closedbefore, total,Reject;
    int pendingaftera, pendingbeforea, closedaftera, closedbeforea, totala,Rejecta;
    string zone = "%";
    protected void Page_Load(object sender, EventArgs e)
    {
      // this.txtFrom.Attributes.Add("onfocus", "popUpCalendarLeft(this,document.getElementById('ctl00_ContentPlaceHolder1_txtFrom'), 'dd-mmm-yyyy')");
       // this.txtTo.Attributes.Add("onfocus", "popUpCalendarLeft(this,document.getElementById('ctl00_ContentPlaceHolder1_txtTo'), 'dd-mmm-yyyy')");
        
        LblStatus.Text = "";
        if (Session.Count == 0)
            Response.Redirect("../Admin/Login.aspx");
        else
        {
            if (!Page.IsPostBack)
            {
                // Modified by Srikanth on 13-05-2013
                
                GenerateZonesList();
                if (Request.QueryString.Count > 0)
                {
                    ddlZone.SelectedValue = ddlZone.Items.FindByValue(Request.QueryString[0].ToString()).Value;
                    txtFrom.Text = Session["from"].ToString().Trim();
                    txtTo.Text = Session["to"].ToString().Trim();
                    //txtFrom.Enabled = false;
                    //Session["from"] = txtFrom.Text;
                    //Session["to"] = txtTo.Text;
                   // txtTo.Enabled = false;
                    ddlZone.Enabled = false;
                    zone = ddlZone.SelectedValue.ToString().Trim();
                }
                else
                {
                    if (Session.Count > 0)
                    {
                        if (Session["Dept_Code"].ToString().Trim() == "20")
                        {
                            if (ddlZone.SelectedIndex == 0)
                            {
                                zone = "%";
                            }
                            else
                            {
                                zone = ddlZone.SelectedValue;
                            }
                        }
                        else
                        {
                            ddlZone.SelectedValue = ddlZone.Items.FindByValue(Session["Zone"].ToString().Trim()).Value;
                            ddlZone.Enabled = false;
                            zone = ddlZone.SelectedValue.ToString().Trim();
                        }
                    }
                }
                // Modified by Srikanth on 13-05-2013
                //created by ravichandra on 26-08-2013 for back hyperlink visible true or false
                if (Session["Dept_Code"].ToString().Trim() == "1")
                {
                    HyperLink2.Visible = false;
                }
                else
                {
                    HyperLink2.Visible = true;
                }
                //created by ravichandra on 26-08-2013 for back hyperlink visible true or false
                THeader();
                FillGrid();
                tbl1.Width = "750";
                TTotal("Sr");
                TTotal("Gr");
            }

        }
    }
    //Srikanth On 13-05-2013
    public void GenerateZonesList()
    {
        ds = csRegComplaint.FetchZones();
        ddlZone.DataTextField = "ZoneName";
        ddlZone.DataValueField = "intZoneID";
        ddlZone.DataSource = ds.Tables[0];
        ddlZone.DataBind();
        ddlZone.Items.Insert(0, "Select Zone Number");
    }

    public void FillGrid()
    {
        DataSet vehicleDS = new DataSet();
        vehicleDS = tran1.GetAbstract(txtFrom.Text.Trim(),txtTo.Text.Trim(),zone);
        GridView1.DataSource = vehicleDS;
        GridView1.DataBind();
    }
       
    protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)
    {

        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            TChildHead(Convert.ToString(DataBinder.Eval(e.Row.DataItem, "SERVICE_ID")), Convert.ToString(DataBinder.Eval(e.Row.DataItem, "DEPARTMENT")), Convert.ToString(DataBinder.Eval(e.Row.DataItem, "SERVICE_NAME")), Convert.ToString(DataBinder.Eval(e.Row.DataItem, "total")), Convert.ToString(DataBinder.Eval(e.Row.DataItem, "beforeclose")), Convert.ToString(DataBinder.Eval(e.Row.DataItem, "afterclose")), Convert.ToString(DataBinder.Eval(e.Row.DataItem, "beforeopen")), Convert.ToString(DataBinder.Eval(e.Row.DataItem, "afteropen")), Convert.ToString(DataBinder.Eval(e.Row.DataItem, "Rejected")));

            int total1 = Convert.ToInt32(DataBinder.Eval(e.Row.DataItem, "afteropen")) + Convert.ToInt32(DataBinder.Eval(e.Row.DataItem, "beforeopen")) + Convert.ToInt32(DataBinder.Eval(e.Row.DataItem, "afterclose")) + Convert.ToInt32(DataBinder.Eval(e.Row.DataItem, "beforeclose")) + Convert.ToInt32(DataBinder.Eval(e.Row.DataItem, "Rejected"));
            total = total1 + total;
            totala = total1 + totala;
            
            int pendingafter1 = Convert.ToInt32(DataBinder.Eval(e.Row.DataItem, "afteropen"));
            pendingafter = pendingafter1 + pendingafter;
            pendingaftera = pendingafter1 + pendingaftera;

            int pendingbefore1 = Convert.ToInt32(DataBinder.Eval(e.Row.DataItem, "beforeopen"));
            pendingbefore = pendingbefore1 + pendingbefore;
            pendingbeforea = pendingbefore1 + pendingbeforea;

            int closedafter1 = Convert.ToInt32(DataBinder.Eval(e.Row.DataItem, "afterclose"));
            closedafter = closedafter1 + closedafter;
            closedaftera = closedafter1 + closedaftera;

            int closedbefore1 = Convert.ToInt32(DataBinder.Eval(e.Row.DataItem, "beforeclose"));
            closedbefore = closedbefore1 + closedbefore;
            closedbeforea = closedbefore1 + closedbeforea;

            int Reject1 = Convert.ToInt32(DataBinder.Eval(e.Row.DataItem, "Rejected"));
            Reject = Reject1 + Reject;
            Rejecta = Reject1 + Rejecta;
           
        }

        if (e.Row.RowType == DataControlRowType.Footer)
        {
            e.Row.Cells[1].Text = "Total: ";
            e.Row.Cells[2].Text = total.ToString().Trim();
            e.Row.Cells[3].Text = closedbefore.ToString().Trim();
            e.Row.Cells[4].Text = closedafter.ToString().Trim();
            e.Row.Cells[5].Text = pendingbefore.ToString().Trim();
            e.Row.Cells[6].Text = pendingafter.ToString().Trim();
            e.Row.Cells[7].Text = Reject.ToString().Trim();

            e.Row.Cells[1].HorizontalAlign = HorizontalAlign.Center;
            e.Row.Cells[2].HorizontalAlign = HorizontalAlign.Center;
            e.Row.Cells[3].HorizontalAlign = HorizontalAlign.Center;
            e.Row.Cells[4].HorizontalAlign = HorizontalAlign.Center;
            e.Row.Cells[5].HorizontalAlign = HorizontalAlign.Center;
            e.Row.Cells[6].HorizontalAlign = HorizontalAlign.Center;
            e.Row.Cells[7].HorizontalAlign = HorizontalAlign.Center;

            e.Row.Font.Bold = true;
           
        }
    }

    
    #region Create Dynamic Table

    public void THeader()
    {

        #region First Copy
        tRow = new HtmlTableRow();
        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<font color=white><b>SNO</b></font>";
        tcell1.Align = "Center";
        tcell1.ColSpan = 1;
        tcell1.RowSpan = 2;
        tRow.Cells.Add(tcell1);
        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<font color=white><b>Service</b></font>";
        tcell1.Align = "Center";
        tcell1.ColSpan = 1;
        tcell1.RowSpan = 2;
        tRow.Cells.Add(tcell1);
        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<font color=white><b>Total Received</b></font>";
        tcell1.Align = "Center";
        tcell1.ColSpan = 1;
        tcell1.RowSpan = 2;
        tRow.Cells.Add(tcell1);
        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<font color=white><b>Disposed</b></font>";
        tcell1.Align = "Center";
        tcell1.ColSpan = 3;
        tRow.Cells.Add(tcell1);
        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<font color=white><b>Pending</b></font>";
        tcell1.Align = "Center";
        tcell1.ColSpan = 3;
        tRow.Cells.Add(tcell1);
        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<font color=white><b>Rejected</b></font>";
        tcell1.Align = "Center";
        tcell1.ColSpan = 1;
        tcell1.RowSpan = 2;
        tRow.Cells.Add(tcell1);
        tRow.BgColor = "#83BE00";
        tbl1.Rows.Add(tRow);

        tRow = new HtmlTableRow();
        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<font color=white><b>Before Due Date</b></font>";
        tcell1.Align = "Center";
        tcell1.ColSpan = 1;
        tRow.Cells.Add(tcell1);
        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<font color=white><b>After Due Date</b></font>";
        tcell1.Align = "Center";
        tcell1.ColSpan = 1;
        tRow.Cells.Add(tcell1);

        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<font color=white><b>Total</b></font>";
        tcell1.Align = "Center";
        tcell1.ColSpan = 1;
        tRow.Cells.Add(tcell1);


        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<font color=white><b>Before Due Date</b></font>";
        tcell1.Align = "Center";
        tcell1.ColSpan = 1;
        tRow.Cells.Add(tcell1);
        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<font color=white><b>After Due Date</b></font>";
        tcell1.Align = "Center";
        tcell1.ColSpan = 1;
        tRow.Cells.Add(tcell1);

        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<font color=white><b>Total</b></font>";
        tcell1.Align = "Center";
        tcell1.ColSpan = 1;
        tRow.Cells.Add(tcell1);


        tRow.BgColor = "#83BE00";
       
        tbl1.Rows.Add(tRow);
        
        #endregion

    }
    
    public void TChildHead(string Service_id,string Department,string Service, string totalReceived, string beforeclose, string afterclose, string beforeopen, string afteropen,string Rejected)
    {
        cnt = cnt + 1;
        if (Dept.Trim() != Department.Trim())
        {            
            if(cnt>1)
            TTotal("Sr");
        totala = 0;
        pendingaftera = 0;
        pendingbeforea = 0;
        closedaftera = 0;
        closedbeforea = 0;
        Rejecta = 0;
            Dept = Department.Trim();
            tRow = new HtmlTableRow();
            tcell1 = new HtmlTableCell();
            tcell1.InnerHtml = "<b>" + Department.Trim() + "</b>";
            tcell1.Align = "Center";
            tcell1.ColSpan = 10;
            tRow.Cells.Add(tcell1);
            tRow.BgColor = "#E6EDF7";
            tbl1.Rows.Add(tRow);
        }

        // tRow = new HtmlTableRow();
        #region First Copy
        tRow = new HtmlTableRow();
        tcell1 = new HtmlTableCell();
        tcell1.InnerText = cnt.ToString().Trim();
        tcell1.Align = "Center";
        tcell1.Width = "50";
        tRow.Cells.Add(tcell1);
        tcell1 = new HtmlTableCell();
        tcell1.InnerText = Service.Trim();
        tcell1.Align = "Left";
        tRow.Cells.Add(tcell1);
        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = totalReceived.Trim();
        tcell1.Align = "Right";
        tRow.Cells.Add(tcell1);
        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<a href='frmCCDetails.aspx?Id=" + Service_id.Trim() + "&Req=BClose&From=" + txtFrom.Text.Trim() + "&To=" + txtTo.Text.Trim() + "&zone=" + ddlZone.SelectedValue.ToString().Trim() + "'> " + beforeclose.Trim() + "</a>";
        tcell1.Align = "Right";
        tRow.Cells.Add(tcell1);
        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<a href='frmCCDetails.aspx?Id=" + Service_id.Trim() + "&Req=AClose&From=" + txtFrom.Text.Trim() + "&To=" + txtTo.Text.Trim() + "&zone=" + ddlZone.SelectedValue.ToString().Trim() + "'> " + afterclose.Trim() + "</a>";
        tcell1.Align = "Right";
        tRow.Cells.Add(tcell1);


        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = Convert.ToString(Convert.ToInt32(afterclose.Trim()) + Convert.ToInt32(beforeclose));
        tcell1.Align = "Center";
        tRow.Cells.Add(tcell1);



        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<a href='frmCCDetails.aspx?Id=" + Service_id.Trim() + "&Req=BOpen&From=" + txtFrom.Text.Trim() + "&To=" + txtTo.Text.Trim() + "&zone=" + ddlZone.SelectedValue.ToString().Trim() + "'> " + beforeopen.Trim() + "</a>";
        tcell1.Align = "Right";
        tRow.Cells.Add(tcell1);
        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<a href='frmCCDetails.aspx?Id=" + Service_id.Trim() + "&Req=AOpen&From=" + txtFrom.Text.Trim() + "&To=" + txtTo.Text.Trim() + "&zone=" + ddlZone.SelectedValue.ToString().Trim() + "'> " + afteropen.Trim() + "</a>";
        tcell1.Align = "Right";
        tRow.Cells.Add(tcell1);


        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = Convert.ToString(Convert.ToInt32(beforeopen.Trim()) + Convert.ToInt32(afteropen));
        tcell1.Align = "Center";
        tRow.Cells.Add(tcell1);


        tcell1 = new HtmlTableCell();
        tcell1.InnerHtml = "<a href='frmCCDetails.aspx?Id=" + Service_id.Trim() + "&Req=Reject&From=" + txtFrom.Text.Trim() + "&To=" + txtTo.Text.Trim() + "&zone=" + ddlZone.SelectedValue.ToString().Trim() + "'> " + Rejected.Trim() + "</a>";
        tcell1.Align = "Right";
        tRow.Cells.Add(tcell1);
        tbl1.Rows.Add(tRow);
        

        #endregion
       
    }

    public void TTotal(string totStatus)
    {
        //tRow = new HtmlTableRow();
        

         #region First Copy
        tRow = new HtmlTableRow();
        tcell1 = new HtmlTableCell();
        if (totStatus.Trim() == "Gr")
            tcell1.InnerHtml = "<font color=white><b> Grand Total </b></font>";
        else
            tcell1.InnerHtml = "<b> Sub Total </b>";
        tcell1.ColSpan = 2;
        tcell1.Align = "Right";
        tRow.Cells.Add(tcell1);

        tcell1 = new HtmlTableCell();
        if (totStatus.Trim() == "Gr")
            tcell1.InnerHtml = "<font color=white><b>" + total.ToString().Trim() + "</b></font>";
        else
            tcell1.InnerHtml = "<b>" + totala.ToString().Trim() + "</b>";
        tcell1.Align = "Right";
        tRow.Cells.Add(tcell1);

        tcell1 = new HtmlTableCell();
        if (totStatus.Trim() == "Gr")
            tcell1.InnerHtml = "<font color=white><b>" + closedbefore.ToString().Trim() + "</b></font>";
        else
            tcell1.InnerHtml = "<b>" + closedbeforea.ToString().Trim() + "</b>";
        tcell1.Align = "Right";
        tRow.Cells.Add(tcell1);

        tcell1 = new HtmlTableCell();
        if (totStatus.Trim() == "Gr")
            tcell1.InnerHtml = "<font color=white><b>" + closedafter.ToString().Trim() + "</b></font>";
        else
            tcell1.InnerHtml = "<b>" + closedaftera.ToString().Trim() + "</b>";
        tcell1.Align = "Right";
        tRow.Cells.Add(tcell1);


        tcell1 = new HtmlTableCell();
        if (totStatus.Trim() == "Gr")
            tcell1.InnerHtml = "<font color=white><b>" + Convert.ToString(Convert.ToInt32(closedbefore.ToString().Trim()) + Convert.ToInt32(closedafter.ToString().Trim())) + "</b></font>";
        else
            tcell1.InnerHtml = "<b>" + Convert.ToString(Convert.ToInt32(closedbeforea.ToString().Trim()) + Convert.ToInt32(closedaftera.ToString().Trim())) + "</b>";
        tcell1.Align = "Center";
        tRow.Cells.Add(tcell1);

        tcell1 = new HtmlTableCell();
        if (totStatus.Trim() == "Gr")
            tcell1.InnerHtml = "<font color=white><b>" + pendingbefore.ToString().Trim() + "</b></font>";
        else
            tcell1.InnerHtml = "<b>" + pendingbeforea.ToString().Trim() + "</b>";
        tcell1.Align = "Right";
        tRow.Cells.Add(tcell1);

        tcell1 = new HtmlTableCell();
        if (totStatus.Trim() == "Gr")
            tcell1.InnerHtml = "<font color=white><b>" + pendingafter.ToString().Trim() + "</b></font>";
        else
            tcell1.InnerHtml = "<b>" + pendingaftera.ToString().Trim() + "</b>";
        tcell1.Align = "Right";
        tRow.Cells.Add(tcell1);


        tcell1 = new HtmlTableCell();
        if (totStatus.Trim() == "Gr")
            tcell1.InnerHtml = "<font color=white><b>" + Convert.ToString(Convert.ToInt32(pendingbefore.ToString().Trim()) + Convert.ToInt32(pendingafter.ToString().Trim())) + "</b></font>";
        else
            tcell1.InnerHtml = "<b>" + Convert.ToString(Convert.ToInt32(pendingbeforea.ToString().Trim()) + Convert.ToInt32(pendingaftera.ToString().Trim())) + "</b>";
        tcell1.Align = "Center";
        tRow.Cells.Add(tcell1);

        tcell1 = new HtmlTableCell();
        if (totStatus.Trim() == "Gr")
            tcell1.InnerHtml = "<font color=white><b>" + Reject.ToString().Trim() + "</b></font>";
        else
            tcell1.InnerHtml = "<b>" + Rejecta.ToString().Trim() + "</b>";
        tcell1.Align = "Right";
        tRow.Cells.Add(tcell1);

        if (totStatus.Trim() == "Gr")
            tRow.BgColor = "#83BE00";
        else
            tRow.BgColor = "#E6EDF7";
        tbl1.Rows.Add(tRow);
        #endregion


        if (total <= 0)
        {
            //tbl1.Visible = false;
          //  LblStatus.Text = " No Records Found ";
        }
    }    

    #endregion

    protected void btnSubmit_Click(object sender, EventArgs e)
    {
        // Modified by Srikanth on 13-05-2013
        // Tables Used: COMPLAINT_MASTER,COMPLAINT_TRANS,DEPT,SERVICE,LOCALITY,SERVICE_USERS,USERS
        if (Session["Dept_Code"].ToString().Trim() == "20")
        {
            if (ddlZone.SelectedIndex == 0)
            {
                zone = "%";
            }
            else
            {
                zone = ddlZone.SelectedValue;
            }
        }
        else
        {
            ddlZone.SelectedValue = ddlZone.Items.FindByValue(Session["Zone"].ToString().Trim()).Value;
            ddlZone.Enabled = false;
            zone = ddlZone.SelectedValue.ToString().Trim();
        }
        // Modified by Srikanth on 13-05-2013
        // Tables Used: COMPLAINT_MASTER,COMPLAINT_TRANS,DEPT,SERVICE,LOCALITY,SERVICE_USERS,USERS
        THeader();
        FillGrid();
        tbl1.Width = "750";
        TTotal("Sr");
        TTotal("Gr");
    }
}
