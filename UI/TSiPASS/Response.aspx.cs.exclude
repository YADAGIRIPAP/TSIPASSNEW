using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using DotNetIntegrationKit;
using System.Configuration;

public partial class UI_TSiPASS_Response : System.Web.UI.Page
{
    #region Variable Declaration

    string strHEX, strPGActualReponseWithChecksum, strPGActualReponseEncrypted, strPGActualReponseDecrypted, strPGresponseChecksum, strPGTxnStatusCode;
    string[] strPGChecksum, strPGTxnString;
    bool isDecryptable = false;

    string strPG_TxnStatus = string.Empty,
    strPG_ClintTxnRefNo = string.Empty,
            strPG_TPSLTxnBankCode = string.Empty,
            strPG_TPSLTxnID = string.Empty,
            strPG_TxnAmount = string.Empty,
            strPG_TxnDateTime = string.Empty,
            strPG_TxnDate = string.Empty,
            strPG_TxnTime = string.Empty;
    string strPGResponse;
    string strPG_MerchantCode;
    string[] strSplitDecryptedResponse;
    string[] strArrPG_TxnDateTime;
    #endregion

    protected void Page_Load(object sender, EventArgs e)
    {
strPGResponse = Convert.ToString(HttpContext.Current.Request["msg"]);
strPG_MerchantCode = Convert.ToString(HttpContext.Current.Request["tpsl_mrct_cd"]);


if (strPGResponse != "" || strPGResponse != null)
{
LBL_DisplayResult.Text = "Response :: " + strPGResponse;
//Creating Object of Class DotNetIntegration_1_1.RequestURL
RequestURL objRequestURL = new RequestURL();


//Decrypting the PG response
string strIsKey = "7602013131GSXSNX";
string strIsIv = "2547161353NRJXFP";
//Verify Response using Key and Iv
   string  strDecryptedVal = objRequestURL.VerifyPGResponse(strPGResponse, strIsKey,strIsIv);

lblResponseDecrypted.Text=strDecryptedVal;
if(strDecryptedVal.StartsWith("ERROR"))
{
lblValidate.Text = strDecryptedVal;
}
else
{
strSplitDecryptedResponse = strDecryptedVal.Split('|');
	GetPGRespnseData(strSplitDecryptedResponse);

if(strPG_TxnStatus=="0300")
{
lblValidate.Text = "Transaction Success  " + strPG_TxnStatus;
}
else
{
		lblValidate.Text = "Transaction Fail :: <br/>" + "Response :: <br/>"
+ strDecryptedVal;	
}
 }
} 

    }
    public void GetPGRespnseData(string[] parameters)
    {
        string[] strGetMerchantParamForCompare;
        for (int i = 0; i < parameters.Length; i++)
        {
            strGetMerchantParamForCompare = parameters[i].ToString().Split('=');
            if (Convert.ToString(strGetMerchantParamForCompare[0]).ToUpper().Trim() == "TXN_STATUS")
            {
                strPG_TxnStatus = Convert.ToString(strGetMerchantParamForCompare[1]);
            }
            else if (Convert.ToString(strGetMerchantParamForCompare[0]).ToUpper().Trim() == "CLNT_TXN_REF")
            {
                strPG_ClintTxnRefNo = Convert.ToString(strGetMerchantParamForCompare[1]);
            }
            else if (Convert.ToString(strGetMerchantParamForCompare[0]).ToUpper().Trim() == "TPSL_BANK_CD")
            {
                strPG_TPSLTxnBankCode = Convert.ToString(strGetMerchantParamForCompare[1]);
            }
            else if (Convert.ToString(strGetMerchantParamForCompare[0]).ToUpper().Trim() == "TPSL_TXN_ID")
            {
                strPG_TPSLTxnID = Convert.ToString(strGetMerchantParamForCompare[1]);
            }
            else if (Convert.ToString(strGetMerchantParamForCompare[0]).ToUpper().Trim() == "TXN_AMT")
            {
                strPG_TxnAmount = Convert.ToString(strGetMerchantParamForCompare[1]);
            }
            else if (Convert.ToString(strGetMerchantParamForCompare[0]).ToUpper().Trim() == "TPSL_TXN_TIME")
            {
                strPG_TxnDateTime = Convert.ToString(strGetMerchantParamForCompare[1]);
                strArrPG_TxnDateTime = strPG_TxnDateTime.Split(' ');
                strPG_TxnDate = Convert.ToString(strArrPG_TxnDateTime[0]);
                strPG_TxnTime = Convert.ToString(strArrPG_TxnDateTime[1]);
            }
        }
    }

}
